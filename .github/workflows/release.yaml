name: 'release'

# This will trigger the action on each push to the `release` branch.
on:
  push:
    tags:
      - '*'

permissions:
  contents: write
  packages: write

jobs:
  release:
    permissions: write-all
    name: ${{ matrix.platform.os_name }} with rust ${{ matrix.toolchain }}
    runs-on: ${{ matrix.platform.os }}
    strategy:
      fail-fast: false
      matrix:
        platform:
          - os_name: Linux-x86_64
            os: ubuntu-20.04
            target: x86_64-unknown-linux-musl
            bin: file-transfer
            name: file-transfer-Linux-x86_64-musl
          - os_name: Linux-aarch64
            os: ubuntu-20.04
            target: aarch64-unknown-linux-musl
            bin: file-transfer
            name: file-transfer-Linux-aarch64-musl
          - os_name: Windows-x86_64
            os: windows-latest
            target: x86_64-pc-windows-msvc
            bin: file-transfer.exe
            name: file-transfer-Windows-x86_64.exe
          - os_name: macOS-x86_64
            os: macOS-latest
            target: x86_64-apple-darwin
            bin: file-transfer
            name: file-transfer-Darwin-x86_64
          - os_name: macOS-aarch64
            os: macOS-latest
            target: aarch64-apple-darwin
            bin: file-transfer
            name: file-transfer-Darwin-aarch64
        toolchain:
          - stable

    steps:
      - uses: actions/checkout@v3
      - name: Cache cargo & target directories
        uses: Swatinem/rust-cache@v2
      - name: Install musl-tools on Linux
        run: sudo apt-get update --yes && sudo apt-get install --yes musl-tools
        if: contains(matrix.platform.name, 'musl')
      - name: Install Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 16
      - uses: pnpm/action-setup@v2
        name: Install pnpm
        with:
          version: 7
          run_install: false
      - name: install frontend
        run: cd frontend &&  pnpm i --no-frozen-lockfile &&  pnpm build && cd ..

      - name: copy frontend
        run: cp -r frontend/dist/. backend/public 
      - id: setup-rust
        if: matrix.platform.os_name == 'Windows-x86_64'
        name: setup rust
        uses: ningenMe/setup-rustup@v1.1.0
        with:
          rust-version: 1.75.0
      - name: Build for Windows
        if: matrix.platform.os_name == 'Windows-x86_64'
        run: cd backend && cargo build --target ${{ matrix.platform.target }} --release  && cd ..
      - name: Build binary
        if: matrix.platform.os_name != 'Windows-x86_64'
        uses: houseabsolute/actions-rust-cross@v0
        with:
          command: "build"
          target: ${{ matrix.platform.target }}
          # toolchain: ${{ matrix.toolchain }}
          working-directory: backend
          args: "--locked --release"
          strip: true
      - name: Upload binaries to release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: backend/target/${{ matrix.platform.target }}/release/${{ matrix.platform.bin }}
          asset_name: ${{ matrix.platform.name }}
          tag: ${{ github.ref }}
      # - name: Set environment variables
      #   shell: bash
      #   run: |
      #     cd backend
      #     echo "CURRENT_VERSION=$(cargo pkgid | cut -d# -f2 | cut -d: -f2)" >> $GITHUB_ENV

      # - name: Package as archive
      #   shell: bash
      #   run: |
      #     cd backend/target/${{ matrix.platform.target }}/release
      #     if [[ "${{ matrix.platform.os }}" == "windows-latest" ]]; then
      #       7z a ../../../../${{ matrix.platform.name }} ${{ matrix.platform.bin }}
      #     else
      #       tar czvf ../../../../${{ matrix.platform.name }} ${{ matrix.platform.bin }}
      #     fi
      #     cd -
      # - name: Release
      #   uses: softprops/action-gh-release@v1
      #   with:
      #     # note you'll typically need to create a personal access token
      #     # with permissions to create releases in the other repo
      #     draft: true
      #     tag_name: ${{ env.CURRENT_VERSION }}
      #     files: |
      #       ${{ matrix.platform.name }}